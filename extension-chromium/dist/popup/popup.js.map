{
  "version": 3,
  "sources": ["../../popup/popup.ts"],
  "sourcesContent": ["/**\n * Browser MCP Setup Wizard Logic - Simplified Manual Copy Only\n */\n\nlet currentStep = 0;\nlet selectedIDE: string | null = null;\n\nconst IDE_CONFIGS = {\n  claude: {\n    name: 'Claude Desktop',\n    path: {\n      mac: '~/Library/Application Support/Claude/claude_desktop_config.json',\n      linux: '~/.config/Claude/claude_desktop_config.json',\n      windows: '%APPDATA%\\\\Claude\\\\claude_desktop_config.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  },\n  cursor: {\n    name: 'Cursor',\n    path: {\n      mac: '~/.cursor/mcp.json',\n      linux: '~/.cursor/mcp.json',\n      windows: '%USERPROFILE%\\\\.cursor\\\\mcp.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  },\n  windsurf: {\n    name: 'Windsurf',\n    path: {\n      mac: '~/.codeium/windsurf/mcp_config.json',\n      linux: '~/.codeium/windsurf/mcp_config.json',\n      windows: '%APPDATA%\\\\Codeium\\\\windsurf\\\\mcp_config.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  }\n};\n\n// Detect OS\nfunction getOS(): 'mac' | 'linux' | 'windows' {\n  try {\n    const platform = navigator.platform.toLowerCase();\n    if (platform.includes('mac')) return 'mac';\n    if (platform.includes('linux')) return 'linux';\n    return 'windows';\n  } catch (err) {\n    console.error('Error detecting OS:', err);\n    return 'mac'; // Safe default\n  }\n}\n\n// Get extension installation path from user input or stored value\nfunction getExtensionPath(): string {\n  try {\n    const projectPathInput = document.getElementById('projectPath') as HTMLInputElement;\n    if (projectPathInput && projectPathInput.value.trim()) {\n      return projectPathInput.value.trim();\n    }\n\n    // Try to get from storage\n    const stored = localStorage.getItem('browserMCP_projectPath');\n    if (stored) {\n      return stored;\n    }\n\n    // Default placeholder\n    return '/path/to/browser-mcp/mcp-server/dist/index.js';\n  } catch (err) {\n    console.error('Error getting extension path:', err);\n    return '/path/to/browser-mcp/mcp-server/dist/index.js';\n  }\n}\n\n// Auto-detect project path (best effort)\nasync function detectProjectPath() {\n  try {\n    const projectPathInput = document.getElementById('projectPath') as HTMLInputElement;\n    if (!projectPathInput) return;\n\n    // Common installation paths to try\n    const commonPaths = [\n      '/Users/xcode/Documents/YOLOProjects/browser-mcp/mcp-server/dist/index.js',\n      '~/Documents/browser-mcp/mcp-server/dist/index.js',\n      '~/Projects/browser-mcp/mcp-server/dist/index.js',\n      '~/code/browser-mcp/mcp-server/dist/index.js',\n    ];\n\n    showStatus('info', '\uD83D\uDD0D Trying to detect project path...');\n\n    // For now, just suggest the most likely path\n    const suggested = commonPaths[0];\n    projectPathInput.value = suggested;\n\n    showStatus('info', `\uD83D\uDCA1 Suggested path filled in. Please verify it's correct!`);\n\n    // Store for next time\n    try {\n      localStorage.setItem('browserMCP_projectPath', suggested);\n    } catch (err) {\n      console.error('Error saving to localStorage:', err);\n    }\n\n    // Regenerate config with new path\n    generateConfig();\n  } catch (err) {\n    console.error('Error in detectProjectPath:', err);\n    showStatus('error', '\u274C Error detecting path. Please enter manually.');\n  }\n}\n\n// Navigation functions\nfunction nextStep() {\n  try {\n    if (currentStep < 3) {\n      const currentStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n      const currentDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n      if (currentStepEl) currentStepEl.classList.remove('active');\n      if (currentDot) {\n        currentDot.classList.remove('active');\n        currentDot.classList.add('completed');\n      }\n\n      currentStep++;\n\n      const nextStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n      const nextDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n      if (nextStepEl) nextStepEl.classList.add('active');\n      if (nextDot) nextDot.classList.add('active');\n\n      // If moving to step 2, generate config\n      if (currentStep === 2 && selectedIDE) {\n        generateConfig();\n      }\n    }\n  } catch (err) {\n    console.error('Error in nextStep:', err);\n  }\n}\n\nfunction prevStep() {\n  try {\n    if (currentStep > 0) {\n      const currentStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n      const currentDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n      if (currentStepEl) currentStepEl.classList.remove('active');\n      if (currentDot) currentDot.classList.remove('active');\n\n      currentStep--;\n\n      const prevStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n      const prevDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n      if (prevStepEl) prevStepEl.classList.add('active');\n      if (prevDot) {\n        prevDot.classList.add('active');\n        prevDot.classList.remove('completed');\n      }\n    }\n  } catch (err) {\n    console.error('Error in prevStep:', err);\n  }\n}\n\nfunction resetWizard() {\n  try {\n    currentStep = 0;\n    selectedIDE = null;\n\n    // Reset all steps\n    document.querySelectorAll('.step').forEach((el, index) => {\n      if (index === 0) {\n        el.classList.add('active');\n      } else {\n        el.classList.remove('active');\n      }\n    });\n\n    // Reset all dots\n    document.querySelectorAll('.step-dot').forEach((el, index) => {\n      el.classList.remove('active', 'completed');\n      if (index === 0) {\n        el.classList.add('active');\n      }\n    });\n\n    // Clear IDE selection\n    document.querySelectorAll('.ide-option').forEach(el => {\n      el.classList.remove('selected');\n    });\n\n    const continueBtn = document.getElementById('continueBtn') as HTMLButtonElement;\n    if (continueBtn) continueBtn.disabled = true;\n  } catch (err) {\n    console.error('Error in resetWizard:', err);\n  }\n}\n\n// IDE selection\nfunction selectIDE(ide: string) {\n  try {\n    selectedIDE = ide;\n\n    // Update UI\n    document.querySelectorAll('.ide-option').forEach(el => {\n      if (el.getAttribute('data-ide') === ide) {\n        el.classList.add('selected');\n      } else {\n        el.classList.remove('selected');\n      }\n    });\n\n    // Enable continue button\n    const continueBtn = document.getElementById('continueBtn') as HTMLButtonElement;\n    if (continueBtn) continueBtn.disabled = false;\n  } catch (err) {\n    console.error('Error in selectIDE:', err);\n  }\n}\n\n// Generate configuration\nfunction generateConfig() {\n  try {\n    if (!selectedIDE) return;\n\n    const ideConfig = IDE_CONFIGS[selectedIDE as keyof typeof IDE_CONFIGS];\n    if (!ideConfig) {\n      console.error('Unknown IDE config:', selectedIDE);\n      return;\n    }\n\n    const os = getOS();\n    const extensionPath = getExtensionPath();\n    const defaultPath = ideConfig.path[os];\n\n    // Update config path displays\n    const configPathEl = document.getElementById('configPath');\n    if (configPathEl) {\n      configPathEl.textContent = defaultPath;\n    }\n\n    // Generate config JSON\n    const config = ideConfig.config(extensionPath);\n    const configJSON = JSON.stringify(config, null, 2);\n\n    // Update config content\n    const configContentEl = document.getElementById('configContent');\n    if (configContentEl) {\n      configContentEl.innerHTML = `<pre>${escapeHtml(configJSON)}</pre>`;\n    }\n\n    // Update final IDE name\n    const ideNameFinal = document.getElementById('ideNameFinal');\n    if (ideNameFinal) {\n      ideNameFinal.textContent = ideConfig.name;\n    }\n  } catch (err) {\n    console.error('Error in generateConfig:', err);\n    showStatus('error', '\u274C Error generating configuration. Please refresh and try again.');\n  }\n}\n\n// Copy configuration to clipboard\nasync function copyConfig() {\n  try {\n    if (!selectedIDE) return;\n\n    const ideConfig = IDE_CONFIGS[selectedIDE as keyof typeof IDE_CONFIGS];\n    const extensionPath = getExtensionPath();\n    const config = ideConfig.config(extensionPath);\n    const configJSON = JSON.stringify(config, null, 2);\n\n    try {\n      await navigator.clipboard.writeText(configJSON);\n\n      // Update button text\n      const copyText = document.getElementById('copyText');\n      const copyBtn = document.querySelector('.copy-btn');\n\n      if (copyText) copyText.textContent = '\u2705 Copied!';\n      if (copyBtn) copyBtn.classList.add('copied');\n\n      setTimeout(() => {\n        if (copyText) copyText.textContent = '\uD83D\uDCCB Copy Configuration';\n        if (copyBtn) copyBtn.classList.remove('copied');\n      }, 2000);\n    } catch (err) {\n      console.error('Failed to copy:', err);\n      alert('Failed to copy to clipboard. Please copy manually.');\n    }\n  } catch (err) {\n    console.error('Error in copyConfig:', err);\n  }\n}\n\n// Helper function to escape HTML\nfunction escapeHtml(text: string): string {\n  try {\n    const div = document.createElement('div');\n    div.textContent = text;\n    return div.innerHTML;\n  } catch (err) {\n    console.error('Error in escapeHtml:', err);\n    return text;\n  }\n}\n\n// Show status message\nfunction showStatus(type: 'success' | 'error' | 'info', message: string) {\n  try {\n    const statusEl = document.getElementById('configStatus');\n    if (!statusEl) {\n      console.error('Status element not found');\n      return;\n    }\n\n    statusEl.textContent = message;\n    statusEl.className = `status-message ${type}`;\n    statusEl.style.display = 'block';\n  } catch (err) {\n    console.error('Error in showStatus:', err);\n  }\n}\n\n// Initialize on load\ndocument.addEventListener('DOMContentLoaded', () => {\n  try {\n    console.log('Browser MCP Setup Wizard loaded');\n\n    // Step 0: Get Started button\n    const getStartedBtn = document.getElementById('getStartedBtn');\n    if (getStartedBtn) {\n      getStartedBtn.addEventListener('click', () => {\n        try {\n          nextStep();\n        } catch (err) {\n          console.error('Error in getStartedBtn click:', err);\n        }\n      });\n    }\n\n    // Step 1: IDE selection\n    document.querySelectorAll('.ide-option').forEach(el => {\n      el.addEventListener('click', () => {\n        try {\n          const ide = el.getAttribute('data-ide');\n          if (ide) selectIDE(ide);\n        } catch (err) {\n          console.error('Error in ide-option click:', err);\n        }\n      });\n    });\n\n    const backBtn1 = document.getElementById('backBtn1');\n    if (backBtn1) {\n      backBtn1.addEventListener('click', () => {\n        try {\n          prevStep();\n        } catch (err) {\n          console.error('Error in backBtn1 click:', err);\n        }\n      });\n    }\n\n    const continueBtn = document.getElementById('continueBtn');\n    if (continueBtn) {\n      continueBtn.addEventListener('click', () => {\n        try {\n          nextStep();\n        } catch (err) {\n          console.error('Error in continueBtn click:', err);\n        }\n      });\n    }\n\n    // Project path input - regenerate config when changed\n    const projectPathInput = document.getElementById('projectPath') as HTMLInputElement;\n    if (projectPathInput) {\n      // Load saved path\n      try {\n        const saved = localStorage.getItem('browserMCP_projectPath');\n        if (saved) {\n          projectPathInput.value = saved;\n        }\n      } catch (err) {\n        console.error('Error loading saved path:', err);\n      }\n\n      // Regenerate config when path changes\n      projectPathInput.addEventListener('input', () => {\n        try {\n          if (selectedIDE) {\n            generateConfig();\n          }\n        } catch (err) {\n          console.error('Error in projectPathInput input:', err);\n        }\n      });\n    }\n\n    const detectBtn = document.getElementById('detectBtn');\n    if (detectBtn) {\n      detectBtn.addEventListener('click', () => {\n        try {\n          detectProjectPath();\n        } catch (err) {\n          console.error('Error in detectBtn click:', err);\n        }\n      });\n    }\n\n    const copyBtn = document.getElementById('copyBtn');\n    if (copyBtn) {\n      copyBtn.addEventListener('click', () => {\n        try {\n          copyConfig();\n        } catch (err) {\n          console.error('Error in copyBtn click:', err);\n        }\n      });\n    }\n\n    const backBtn2 = document.getElementById('backBtn2');\n    if (backBtn2) {\n      backBtn2.addEventListener('click', () => {\n        try {\n          prevStep();\n        } catch (err) {\n          console.error('Error in backBtn2 click:', err);\n        }\n      });\n    }\n\n    const doneConfigBtn = document.getElementById('doneConfigBtn');\n    if (doneConfigBtn) {\n      doneConfigBtn.addEventListener('click', () => {\n        try {\n          nextStep();\n        } catch (err) {\n          console.error('Error in doneConfigBtn click:', err);\n        }\n      });\n    }\n\n    // Step 3: Complete\n    const resetBtn = document.getElementById('resetBtn');\n    if (resetBtn) {\n      resetBtn.addEventListener('click', () => {\n        try {\n          resetWizard();\n        } catch (err) {\n          console.error('Error in resetBtn click:', err);\n        }\n      });\n    }\n\n    const closeBtn = document.getElementById('closeBtn');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        try {\n          window.close();\n        } catch (err) {\n          console.error('Error in closeBtn click:', err);\n        }\n      });\n    }\n\n    // Check connection status and update UI\n    checkConnectionStatus();\n  } catch (err) {\n    console.error('Critical error in DOMContentLoaded:', err);\n    alert('Extension initialization error. Please refresh the popup.');\n  }\n});\n\n// Check if extension is connected to current tab\nasync function checkConnectionStatus() {\n  try {\n    const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n    if (tabs[0]) {\n      const response = await chrome.runtime.sendMessage({\n        type: 'GET_TAB_INFO',\n        payload: { tabId: tabs[0].id }\n      });\n\n      if (response.success && response.data) {\n        // Tab is connected\n        updateConnectionIndicator(true, response.data);\n      } else {\n        // Tab is not connected\n        updateConnectionIndicator(false, null);\n      }\n    }\n  } catch (err) {\n    console.error('Error checking connection status:', err);\n    updateConnectionIndicator(false, null);\n  }\n}\n\n// Update connection indicator in popup\nfunction updateConnectionIndicator(connected: boolean, tabInfo: any) {\n  // This will be called to update visual indicators\n  console.log('Connection status:', connected ? 'Connected' : 'Not connected', tabInfo);\n}\n"],
  "mappings": "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",
  "names": []
}
