{
  "version": 3,
  "sources": ["../../popup/popup.ts"],
  "sourcesContent": ["/**\n * Browser MCP Setup Wizard Logic\n */\n\nlet currentStep = 0;\nlet selectedIDE: string | null = null;\n\nconst IDE_CONFIGS = {\n  claude: {\n    name: 'Claude Desktop',\n    path: {\n      mac: '~/Library/Application Support/Claude/claude_desktop_config.json',\n      linux: '~/.config/Claude/claude_desktop_config.json',\n      windows: '%APPDATA%\\\\Claude\\\\claude_desktop_config.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  },\n  cursor: {\n    name: 'Cursor',\n    path: {\n      mac: '~/.cursor/mcp.json',\n      linux: '~/.cursor/mcp.json',\n      windows: '%USERPROFILE%\\\\.cursor\\\\mcp.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  },\n  windsurf: {\n    name: 'Windsurf',\n    path: {\n      mac: '~/.codeium/windsurf/mcp_config.json',\n      linux: '~/.codeium/windsurf/mcp_config.json',\n      windows: '%APPDATA%\\\\Codeium\\\\windsurf\\\\mcp_config.json'\n    },\n    config: (extensionPath: string) => ({\n      mcpServers: {\n        'browser-inspector': {\n          command: 'node',\n          args: [extensionPath],\n          env: {\n            NODE_ENV: 'production'\n          }\n        }\n      }\n    })\n  }\n};\n\n// Detect OS\nfunction getOS(): 'mac' | 'linux' | 'windows' {\n  const platform = navigator.platform.toLowerCase();\n  if (platform.includes('mac')) return 'mac';\n  if (platform.includes('linux')) return 'linux';\n  return 'windows';\n}\n\n// Get extension installation path (placeholder - user needs to configure)\nfunction getExtensionPath(): string {\n  // TODO: This should be detected or user-configurable\n  // For now, provide instructional text\n  return '<YOUR_PROJECT_PATH>/mcp-server/dist/index.js';\n}\n\n// Navigation functions\n(window as any).nextStep = () => {\n  if (currentStep < 3) {\n    const currentStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n    const currentDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n    if (currentStepEl) currentStepEl.classList.remove('active');\n    if (currentDot) {\n      currentDot.classList.remove('active');\n      currentDot.classList.add('completed');\n    }\n\n    currentStep++;\n\n    const nextStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n    const nextDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n    if (nextStepEl) nextStepEl.classList.add('active');\n    if (nextDot) nextDot.classList.add('active');\n\n    // If moving to step 2, generate config\n    if (currentStep === 2 && selectedIDE) {\n      generateConfig();\n    }\n  }\n};\n\n(window as any).prevStep = () => {\n  if (currentStep > 0) {\n    const currentStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n    const currentDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n    if (currentStepEl) currentStepEl.classList.remove('active');\n    if (currentDot) currentDot.classList.remove('active');\n\n    currentStep--;\n\n    const prevStepEl = document.querySelector(`.step[data-step=\"${currentStep}\"]`);\n    const prevDot = document.querySelector(`.step-dot[data-step=\"${currentStep}\"]`);\n\n    if (prevStepEl) prevStepEl.classList.add('active');\n    if (prevDot) {\n      prevDot.classList.add('active');\n      prevDot.classList.remove('completed');\n    }\n  }\n};\n\n(window as any).resetWizard = () => {\n  currentStep = 0;\n  selectedIDE = null;\n\n  // Reset all steps\n  document.querySelectorAll('.step').forEach((el, index) => {\n    if (index === 0) {\n      el.classList.add('active');\n    } else {\n      el.classList.remove('active');\n    }\n  });\n\n  // Reset all dots\n  document.querySelectorAll('.step-dot').forEach((el, index) => {\n    el.classList.remove('active', 'completed');\n    if (index === 0) {\n      el.classList.add('active');\n    }\n  });\n\n  // Clear IDE selection\n  document.querySelectorAll('.ide-option').forEach(el => {\n    el.classList.remove('selected');\n  });\n\n  const continueBtn = document.getElementById('continueBtn') as HTMLButtonElement;\n  if (continueBtn) continueBtn.disabled = true;\n};\n\n// IDE selection\n(window as any).selectIDE = (ide: string) => {\n  selectedIDE = ide;\n\n  // Update UI\n  document.querySelectorAll('.ide-option').forEach(el => {\n    if (el.getAttribute('data-ide') === ide) {\n      el.classList.add('selected');\n    } else {\n      el.classList.remove('selected');\n    }\n  });\n\n  // Enable continue button\n  const continueBtn = document.getElementById('continueBtn') as HTMLButtonElement;\n  if (continueBtn) continueBtn.disabled = false;\n};\n\n// Generate configuration\nfunction generateConfig() {\n  if (!selectedIDE) return;\n\n  const ideConfig = IDE_CONFIGS[selectedIDE as keyof typeof IDE_CONFIGS];\n  const os = getOS();\n  const extensionPath = getExtensionPath();\n\n  // Update config path\n  const configPathEl = document.getElementById('configPath');\n  if (configPathEl) {\n    configPathEl.textContent = ideConfig.path[os];\n  }\n\n  // Generate config JSON\n  const config = ideConfig.config(extensionPath);\n  const configJSON = JSON.stringify(config, null, 2);\n\n  // Update config content with syntax highlighting\n  const configContentEl = document.getElementById('configContent');\n  if (configContentEl) {\n    configContentEl.innerHTML = `<pre>${escapeHtml(configJSON)}</pre>`;\n  }\n\n  // Update final IDE name\n  const ideNameFinal = document.getElementById('ideNameFinal');\n  if (ideNameFinal) {\n    ideNameFinal.textContent = ideConfig.name;\n  }\n}\n\n// Copy configuration to clipboard\n(window as any).copyConfig = async () => {\n  if (!selectedIDE) return;\n\n  const ideConfig = IDE_CONFIGS[selectedIDE as keyof typeof IDE_CONFIGS];\n  const extensionPath = getExtensionPath();\n  const config = ideConfig.config(extensionPath);\n  const configJSON = JSON.stringify(config, null, 2);\n\n  try {\n    await navigator.clipboard.writeText(configJSON);\n\n    // Update button text\n    const copyText = document.getElementById('copyText');\n    const copyBtn = document.querySelector('.copy-btn');\n\n    if (copyText) copyText.textContent = '\u2705 Copied!';\n    if (copyBtn) copyBtn.classList.add('copied');\n\n    setTimeout(() => {\n      if (copyText) copyText.textContent = '\uD83D\uDCCB Copy Configuration';\n      if (copyBtn) copyBtn.classList.remove('copied');\n    }, 2000);\n  } catch (err) {\n    console.error('Failed to copy:', err);\n    alert('Failed to copy to clipboard. Please copy manually.');\n  }\n};\n\n// Helper function to escape HTML\nfunction escapeHtml(text: string): string {\n  const div = document.createElement('div');\n  div.textContent = text;\n  return div.innerHTML;\n}\n\n// Initialize on load\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('Browser MCP Setup Wizard loaded');\n\n  // Detect current tab info\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    if (tabs[0]) {\n      console.log('Current tab:', tabs[0].url);\n      // Extension is active for this tab\n    }\n  });\n});\n"],
  "mappings": "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",
  "names": []
}
