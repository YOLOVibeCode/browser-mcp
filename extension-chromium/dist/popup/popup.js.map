{
  "version": 3,
  "sources": ["../../popup/popup.ts"],
  "sourcesContent": ["/**\n * Popup UI for Browser Inspector Extension\n */\n\ninterface TabState {\n  isActive: boolean;\n  port?: number;\n  virtualFilesystemURI?: string;\n}\n\nlet currentTabId: number | null = null;\nlet currentTabUrl: string | null = null;\nlet tabState: TabState = { isActive: false };\n\n/**\n * Initialize popup\n */\nasync function initialize(): Promise<void> {\n  try {\n    // Get current tab\n    const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\n\n    if (!tab || !tab.id || !tab.url) {\n      showError('Could not get current tab information');\n      return;\n    }\n\n    currentTabId = tab.id;\n    currentTabUrl = tab.url;\n\n    // Get tab state from service worker\n    const response = await chrome.runtime.sendMessage({\n      type: 'GET_TAB_INFO',\n      payload: { tabId: currentTabId },\n    });\n\n    if (response.success && response.data) {\n      tabState = {\n        isActive: true,\n        port: response.data.port,\n        virtualFilesystemURI: response.data.virtualFilesystemURI,\n      };\n    } else {\n      tabState = { isActive: false };\n    }\n\n    render();\n  } catch (error) {\n    console.error('Failed to initialize popup:', error);\n    showError('Failed to initialize: ' + (error as Error).message);\n  }\n}\n\n/**\n * Render popup UI\n */\nfunction render(): void {\n  const content = document.getElementById('content');\n  if (!content) return;\n\n  content.innerHTML = `\n    <div class=\"tab-info\">\n      <div class=\"tab-info-row\">\n        <div class=\"tab-info-label\">Status:</div>\n        <div class=\"tab-info-value\">\n          <span class=\"status ${tabState.isActive ? 'active' : 'inactive'}\">\n            ${tabState.isActive ? 'Active' : 'Inactive'}\n          </span>\n        </div>\n      </div>\n      <div class=\"tab-info-row\">\n        <div class=\"tab-info-label\">Tab URL:</div>\n        <div class=\"tab-info-value\">${currentTabUrl}</div>\n      </div>\n      ${tabState.isActive && tabState.port ? `\n        <div class=\"tab-info-row\">\n          <div class=\"tab-info-label\">Port:</div>\n          <div class=\"tab-info-value\">${tabState.port}</div>\n        </div>\n      ` : ''}\n    </div>\n\n    ${tabState.isActive ? `\n      <button class=\"deactivate\" id=\"deactivate-btn\">Deactivate Debugging</button>\n\n      ${tabState.port ? `\n        <div class=\"port-info\">\n          <strong>Connect your AI Assistant:</strong>\n          <div>MCP Server: localhost:${tabState.port}</div>\n          <div>Virtual Filesystem: ${tabState.virtualFilesystemURI}</div>\n          <button class=\"copy-button\" id=\"copy-port-btn\">Copy Port</button>\n        </div>\n      ` : ''}\n    ` : `\n      <button class=\"activate\" id=\"activate-btn\">Activate Debugging</button>\n    `}\n  `;\n\n  // Attach event listeners\n  if (tabState.isActive) {\n    const deactivateBtn = document.getElementById('deactivate-btn');\n    if (deactivateBtn) {\n      deactivateBtn.addEventListener('click', handleDeactivate);\n    }\n\n    const copyPortBtn = document.getElementById('copy-port-btn');\n    if (copyPortBtn && tabState.port) {\n      copyPortBtn.addEventListener('click', () => handleCopyPort(tabState.port!));\n    }\n  } else {\n    const activateBtn = document.getElementById('activate-btn');\n    if (activateBtn) {\n      activateBtn.addEventListener('click', handleActivate);\n    }\n  }\n}\n\n/**\n * Handle activate button click\n */\nasync function handleActivate(): Promise<void> {\n  if (!currentTabId || !currentTabUrl) {\n    showError('No tab selected');\n    return;\n  }\n\n  try {\n    // Disable button\n    const btn = document.getElementById('activate-btn') as HTMLButtonElement;\n    if (btn) {\n      btn.disabled = true;\n      btn.textContent = 'Activating...';\n    }\n\n    // Send activate message to service worker\n    const response = await chrome.runtime.sendMessage({\n      type: 'ACTIVATE_TAB',\n      payload: { tabId: currentTabId, url: currentTabUrl },\n    });\n\n    if (response.success) {\n      tabState = {\n        isActive: true,\n        port: response.data.port,\n        virtualFilesystemURI: response.data.virtualFilesystemURI,\n      };\n      render();\n    } else {\n      showError('Failed to activate: ' + response.error);\n      if (btn) {\n        btn.disabled = false;\n        btn.textContent = 'Activate Debugging';\n      }\n    }\n  } catch (error) {\n    console.error('Failed to activate tab:', error);\n    showError('Failed to activate: ' + (error as Error).message);\n  }\n}\n\n/**\n * Handle deactivate button click\n */\nasync function handleDeactivate(): Promise<void> {\n  if (!currentTabId) {\n    showError('No tab selected');\n    return;\n  }\n\n  try {\n    // Disable button\n    const btn = document.getElementById('deactivate-btn') as HTMLButtonElement;\n    if (btn) {\n      btn.disabled = true;\n      btn.textContent = 'Deactivating...';\n    }\n\n    // Send deactivate message to service worker\n    const response = await chrome.runtime.sendMessage({\n      type: 'DEACTIVATE_TAB',\n      payload: { tabId: currentTabId },\n    });\n\n    if (response.success) {\n      tabState = { isActive: false };\n      render();\n    } else {\n      showError('Failed to deactivate: ' + response.error);\n      if (btn) {\n        btn.disabled = false;\n        btn.textContent = 'Deactivate Debugging';\n      }\n    }\n  } catch (error) {\n    console.error('Failed to deactivate tab:', error);\n    showError('Failed to deactivate: ' + (error as Error).message);\n  }\n}\n\n/**\n * Handle copy port button click\n */\nasync function handleCopyPort(port: number): Promise<void> {\n  try {\n    await navigator.clipboard.writeText(String(port));\n\n    const btn = document.getElementById('copy-port-btn') as HTMLButtonElement;\n    if (btn) {\n      const originalText = btn.textContent;\n      btn.textContent = 'Copied!';\n      setTimeout(() => {\n        btn.textContent = originalText;\n      }, 2000);\n    }\n  } catch (error) {\n    console.error('Failed to copy port:', error);\n  }\n}\n\n/**\n * Show error message\n */\nfunction showError(message: string): void {\n  const content = document.getElementById('content');\n  if (!content) return;\n\n  content.innerHTML = `\n    <div class=\"error\">${message}</div>\n  `;\n}\n\n// Initialize when popup opens\ninitialize();\n"],
  "mappings": "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",
  "names": []
}
